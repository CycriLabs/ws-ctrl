#!/usr/bin/env node
import{Command as ee}from"commander";var U={name:"@cycrilabs/ws-ctrl",version:"0.0.1",description:"CLI tool to initialize a development workspace",repository:{type:"git",url:"git+https://github.com/CycriLabs/ws-ctrl.git"},author:"Marc Scheib",license:"MIT",bugs:{url:"https://github.com/CycriLabs/ws-ctrl/issues"},homepage:"https://github.com/CycriLabs/ws-ctrl#readme",files:["dist"],bin:{"@cycrilabs/ws-ctrl":"dist/index.js"},type:"module",engines:{node:">=20"},scripts:{dev:"tsx src/index.ts",lint:"eslint ./src",test:"vitest","test:coverage":"vitest run --coverage",build:"tsup","build:watch":"tsup --watch",release:"npx --yes -p @semantic-release/changelog -p @semantic-release/git semantic-release",prepare:"husky"},devDependencies:{"@commitlint/cli":"^19.6.1","@commitlint/config-conventional":"^19.6.0","@eslint/js":"^9.19.0","@types/prompts":"^2.4.9","@vitest/coverage-v8":"^3.0.4",eslint:"^9.19.0",globals:"^15.14.0",husky:"^9.1.7","lint-staged":"^15.4.2",memfs:"^4.17.0",prettier:"^3.4.2",tempy:"^3.1.0",tsup:"^8.3.5",tsx:"^4.19.2",typescript:"^5.7.3","typescript-eslint":"^8.21.0",vitest:"^3.0.4"},dependencies:{chalk:"^5.4.1",commander:"^13.1.0",conf:"^13.1.0",dotenv:"^16.4.7",prompts:"^2.4.2"}};import{Command as Vt,Option as Ht}from"commander";import{Argument as Pt}from"commander";var X=()=>new Pt("[workspace-path]","path to the workspace"),Q=X(),D=X().default(".");import Ft from"conf";import Tt from"chalk";var{red:Y,yellow:Z,green:tt,bold:C}=Tt;import{promises as w}from"node:fs";import{extname as St,join as K}from"node:path";async function E(r){return w.readFile(r,"utf8")}async function F(r,t){return w.writeFile(r,t,"utf8")}async function A(r,t,e=[]){try{await w.mkdir(t,{recursive:!0})}catch(s){if(s instanceof Error&&"code"in s&&s.code!=="EEXIST")throw s}let o=await w.readdir(r);await Promise.all(o.filter(s=>!e.includes(s)).map(async s=>{let i=K(r,s),a=K(t,s);(await w.stat(i)).isDirectory()?await A(i,a):await w.copyFile(i,a)}))}async function T(r){try{let o=(await w.readdir(r)).filter(i=>St(i).toLowerCase()===".json").map(async i=>{let a=K(r,i),c=await E(a);try{return JSON.parse(c)}catch(n){throw new Error(`Failed to parse JSON in file ${i}: ${n.message}`)}});return await Promise.all(o)}catch(t){throw new Error(`Error loading JSON files: ${t.message}`)}}import{spawnSync as et}from"node:child_process";import{existsSync as Rt}from"node:fs";import{join as kt}from"node:path";async function rt(r,t,e){return Rt(kt(e,".git"))?et("git",["pull"],{cwd:e,stdio:"inherit"}):et("git",["clone",r,e],{cwd:t,stdio:"inherit"}),Promise.resolve()}var z=class{log(t,e){let o=e?e(t):t;console.log(o)}error(t){this.log(t,Y)}warn(t){this.log(t,Z)}success(t){this.log(t,tt)}},p=new z;import{execSync as vt}from"node:child_process";async function O(r,t){return vt(r,{cwd:t,stdio:"inherit"})}import{createHash as At}from"node:crypto";import{access as ot,constants as It}from"node:fs/promises";import{join as Ut,resolve as Dt}from"node:path";function S(r){return Dt(r)}function V(r){let t=S(r);return At("md5").update(t).digest("hex").substring(0,10)}async function W(r){try{await ot(r);let t=V(r);return await ot(Ut(r,`${t}.json`),It.F_OK),!0}catch{return!1}}var Ot={workspacePath:{type:"string"},organization:{type:"string"},templatesRepository:{type:["string","null"]}},P;function st(r,t,e){return P=it(r),P.set("workspacePath",S(r)),P.set("organization",t),P.set("templatesRepository",e),P}function it(r){return P=new Ft({schema:Ot,cwd:S(r),configName:V(r)}),P}async function b(r){let t=r.trim();if(!await W(t))throw new Error("The given path is no valid workspace.");return it(t)}import{join as l}from"node:path";var nt="templates",x="config",at="docker",ct="git-templates";var pt="repositories",mt="servers",ut="use-cases",H="development";import{dirname as Wt}from"node:path";import{fileURLToPath as bt}from"node:url";function lt(){let r=bt(import.meta.url);return Wt(r)}var g=class r{constructor(t){this.config=t}static create(t){return new r(t)}getPackageTemplatesDir(){return l(this.#t(1),nt)}getGitTemplatesDir(){return l(this.#t(),x,ct)}getConfigDir(){return l(this.#t(),x)}getDockerDir(){return l(this.#t(),x,at)}getServersDir(){return l(this.#t(),x,mt)}getUseCasesDir(){return l(this.#t(),x,ut)}getRepositoriesDir(){return l(this.#t(),x,pt)}getDevelopmentDir(){return l(this.#t(),x,H)}getWorkingDir(){return l(this.#t(),H)}#t(t=0){return t===0?this.getWorkspacePath():lt()}getWorkspacePath(){return this.config.get("workspacePath")}getTemplatesRepository(){return this.config.get("templatesRepository")}createRepositoryUrl(t,e){return`git@bitbucket.org:${t}/${e}.git`}async initWorkspace(){await this.syncTemplates(),await this.copyDevelopmentDirectory()}async syncTemplates(){let t=this.getPackageTemplatesDir();p.log(`Syncing templates from ${t}...`),await A(t,this.getWorkspacePath()),await this.syncRepositoryTemplates()}async syncRepositoryTemplates(){let t=this.getTemplatesRepository();if(t){let e=this.createRepositoryUrl(this.config.get("organization"),t);p.log(`Syncing templates from repository ${e}...`),await rt(e,this.getWorkspacePath(),this.getGitTemplatesDir()),await A(this.getGitTemplatesDir(),this.getConfigDir(),[".git"])}}async copyDevelopmentDirectory(){await A(this.getDevelopmentDir(),this.getWorkingDir())}};var R=class r{constructor(t){this.templatesAccess=t}static create(t){return new r(t)}async loadUseCases(...t){let e=["DISABLED",...t];return this.loadFiles().then(o=>o.map(s=>this.#t(s))).then(o=>o.filter(s=>!e.includes(s.state)))}async loadFiles(){return T(this.templatesAccess.getUseCasesDir())}#t(t){return{...t,description:t.description||"",state:t.state||"ENABLED"}}};var $=class r{static create(){return new r}executeFormula(t,e){try{let o=this.#t(t,e);return(0,eval)(o)}catch(o){throw new Error(`Error executing formula: ${o}`)}}#t(t,e){return`${Object.entries(e).reduce((s,[i,a])=>`${s}const ${i} = ${JSON.stringify(a)};`,"")}${t}`}};var N=class r{constructor(t,e){this.config=t;this.templatesAccess=e}static create(t,e){return new r(t,e)}async loadRepositories(){return this.loadFiles().then(t=>t.map(e=>this.#t(e)))}async loadFiles(){return T(this.templatesAccess.getRepositoriesDir())}#t(t){return{...t,alias:t.alias||t.name,url:t.url||this.templatesAccess.createRepositoryUrl(this.config.get("organization"),t.name),attributes:{type:"UNKNOWN",...t.attributes}}}};var _=class r{constructor(t){this.templatesAccess=t}static create(t){return new r(t)}async loadServers(){return this.loadFiles()}async loadFiles(){return T(this.templatesAccess.getServersDir())}};var M=class r{constructor(t,e,o){this.templatesAccess=t;this.serversRepository=e;this.repositoriesRepository=o}static create(t,e){return new r(e,_.create(e),N.create(t,e))}async createContext(t={}){return{...t,WORKSPACE_PATH:this.templatesAccess.getWorkspacePath(),WORKING_DIR:this.templatesAccess.getWorkingDir(),SERVERS:await this.serversRepository.loadServers(),REPOSITORIES:await this.repositoriesRepository.loadRepositories()}}};var y=class{constructor(t,e){this.scriptExecutor=t;this.templatesAccess=e}async execute(t,e){throw new Error("Method not implemented.")}};var B=class extends y{async execute(t,e){let{inputFile:o,outputFile:s,context:i}=t;if(!o)throw new Error("No input file provided.");if(!i?.name||!i?.value)throw new Error("Missing replacement target or value.");let a=this.scriptExecutor.executeFormula(o,e),c=await E(a),{name:n,value:u}=i,m=this.scriptExecutor.executeFormula(n,e).replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),h=this.scriptExecutor.executeFormula(u,e),v=c.replace(new RegExp(`${m}=.*`),`${m}=${h}`),G=this.scriptExecutor.executeFormula(s||o,e);return await F(G,v),e}};import Lt from"prompts";import $t from"prompts";function k(r){r.aborted&&(process.stdout.write("\x1B[?25h"),process.stdout.write(`
`),process.exit(1))}function d(r){return typeof r=="string"&&!!r.trim()||typeof r=="boolean"}async function Nt(r,t,e,o={}){return $t({onState:k,type:r,name:"entity",message:`Select the ${t}`,choices:e.filter(o.displayFilter||(()=>!0)).map(s=>({title:o.createTitle?o.createTitle(s):s.name,value:s.id}))}).then(({entity:s})=>s)}function _t(r,t){let e=t.reduce((o,s)=>({...o,[s.id]:s}),{});if(typeof r=="string"){let o=e[r.trim()];if(o)return[o]}else{if(Array.isArray(r))return r.map(o=>e[o.trim()]);throw new Error(`Can find entity for value ${r}.`)}throw new Error(`Entity for selection ${C(r)} not found.`)}async function Mt(r,t,e,o,s={}){let i=d(e)&&typeof e=="string"?e:await Nt(r,t,o,s);return _t(i,o)}async function gt(r,t,e,o={}){let[s]=await Mt("select",r,t,e,o);return s}import Bt from"prompts";async function ft(r,t){return Bt({onState:k,type:r,name:"input",message:t,initial:r==="toggle"?!0:void 0,active:"yes",inactive:"no"}).then(({input:e})=>e)}async function I(r,t,e){return d(e)?e:ft(r,t)}async function J(r,t){let e=d(t)?t:await ft("text",r);if(d(e)&&typeof e=="string")return e.trim();throw Error("No input path provided.")}async function jt(r,t,e){return Lt({onState:k,type:r,name:"input",message:t,choices:e.map(({id:o,name:s})=>({title:s,value:o}))}).then(({input:o})=>o)}function Gt(r,t){let e=t.reduce((o,s)=>({...o,[s.id]:s}),{});if(typeof r=="string"){let o=e[r.trim()];if(o)return o}else{if(Array.isArray(r))return r.map(o=>e[o.trim()]);throw new Error(`Can find entity for value ${r}.`)}throw new Error(`Entity for selection ${C(r)} not found.`)}var L=class extends y{async execute(t,e){let{name:o,message:s,type:i,entities:a,entityKey:c}=t.context;if(!o||!s||!i)throw new Error("Prompt name, message or type missing.");let n;switch(i){case"select":case"multiselect":{let u=(c?e[c]:a)||[],m=await jt(i,s,u);n=Gt(m,u);break}default:{n=await I(i,s);break}}return{...e,[o]:n}}};import Kt from"dotenv";var j=class extends y{async execute(t,e){let o={...e},s=`${this.templatesAccess.getWorkspacePath()}/services.env`,i=Kt.parse(await E(s));Object.assign(o,i),Object.entries(t.context||{}).forEach(([G,wt])=>{o[G]=this.scriptExecutor.executeFormula(wt,o)});let{kcVersion:a,authServerUrl:c,authUser:n,authPassword:u,authTenant:m}=o,h=this.templatesAccess.getWorkspacePath(),v=`docker run         --pull=always         --env-file ${h}/.env         --mount type=bind,src="${h}/config/secret-templates",target="/secret-templates,readonly"         --mount type=bind,src="${h}/config/services-config",target="/output"         --rm -i ghcr.io/cycrilabs/keycloak-configurator:${a} export-secrets -s ${c} -u ${n} -p "${u}" -r ${m} -c //secret-templates -o //output`;return await O(v,this.templatesAccess.getWorkspacePath()),o}};var q={"custom-prompt":L,"generate-service-configuration":j,"change-env-var-value":B};var f=class r{constructor(t,e,o,s){this.templatesAccess=t;this.useCasesRepository=e;this.contextCreator=o;this.scriptExecutor=s}static create(t,e,o){return new r(e,R.create(e),M.create(t,e),o||$.create())}async run(t,e={}){if(typeof t=="string"){let s=(await this.useCasesRepository.loadUseCases()).find(({id:i})=>i===t);if(!s)throw new Error(`Use case not found: ${t}`);return await this.#t(s,e)}else return await this.#t(t,e)}async#t(t,e={}){let{name:o,description:s,steps:i}=t,a=await this.contextCreator.createContext(e);return p.log(`Running use case ${C(o)}...`),s&&p.log(`${s}`),i&&i.length!==0?(p.log("Executing steps..."),await this.#o(i,a)):a}async#o(t,e){let o={...e,STEPS:t};for(let s=0;s<t.length;s++){let i=t[s];p.log(`Step ${s+1}: ${i.description||""}`);let a=await this.#s(i,o);Object.assign(o,a)}return o}async#s(t,e){let o={...e,STEP:t},{inputFile:s,abortIf:i,skipIf:a,loop:c}=t;if(s){let n=this.scriptExecutor.executeFormula(s,o);o.INPUT=await E(n)}if(i&&this.scriptExecutor.executeFormula(i,o))throw new Error("Stopping because 'abortIf' formula is met.");if(a&&this.scriptExecutor.executeFormula(a,o))return p.log("Skipping step."),o;if(c){let n=this.scriptExecutor.executeFormula(c.list,o);if(!n||!Array.isArray(n))throw new Error(`List ${C(c.list)} not found in context.`);let u={...o};for(let m=0;m<n.length;m++){let h=n[m],v={...u,[c.name]:h};await this.#e(t,v)}return o}else return await this.#e(t,o)}async#e(t,e){switch(t.type){case"FORMULA":return await this.#i(t,e);case"COMMAND":return await this.#n(t,e);case"EXECUTOR":return await this.#a(t,e);case"PROMPT":return await this.#c(t,e);case"USE_CASE":return await this.#p(t,e);default:throw new Error(`Unknown step type ${t.type}. Stopping.`)}}async#i(t,e){if(!t.formula)throw new Error("Formula missing in step.");let o=this.scriptExecutor.executeFormula(t.formula,e);return t.outputFile&&typeof o=="string"&&await F(t.outputFile,o),{...e,[t.resultVariable||"STEP_RESULT"]:o}}async#n(t,e){if(!t.command)throw new Error("Command missing in step.");let o=this.scriptExecutor.executeFormula(t.command,e);return await O(o,this.templatesAccess.getWorkspacePath()),e}async#a(t,e){if(!t.executor||!q[t.executor])throw new Error("Executor missing or not found: "+t.executor);return this.#r(t.executor).execute(t,e)}async#c(t,e){return this.#r("custom-prompt").execute(t,e)}#r(t){return new q[t](this.scriptExecutor,this.templatesAccess)}async#p(t,e){if(!t.useCase)throw new Error("Use case missing in step.");let s=(await this.useCasesRepository.loadUseCases("INITIAL")).find(i=>i.id===t.useCase);if(!s)throw new Error(`Use case not found: ${t.useCase}`);return p.log("Starting to run references use case..."),await this.run(s,e),e}};async function zt(r){return d(r)&&typeof r=="string"?r.trim():await I("toggle","Do you want to use a template repository?")?await I("text","Enter the name of the template repository"):null}async function xt(r,t){let e=await J("Path to the target workspace directory",r),o=S(e);if(await W(o))throw new Error("A workspace for the given path is already existing.");let i=await J("What is the name of your organization?"),a=await zt(t.templatesRepository),c=st(o,i,a),n=g.create(c);await n.initWorkspace(),await f.create(c,n).run("init")}var Jt=new Ht("--templates-repository <templatesRepository>","use a template repository"),yt=new Vt().name("init").description("initialize the workspace").addArgument(Q).addOption(Jt).action(xt);import{Command as qt,Option as Xt}from"commander";var Qt=new Xt("-u, --use-case [use-case]","execute the use case with the given name");async function Yt(r,t){let e=await b(r),o=g.create(e),s=f.create(e,o),a=await R.create(o).loadUseCases("INITIAL"),c=await gt("Use case",t.useCase,a,{createTitle:n=>`${n.name} (${n.id})`,displayFilter:n=>n.state!=="HIDDEN"});await s.run(c)}var dt=new qt().name("run").description("run a use case in the workspace").addArgument(D).addOption(Qt).action(Yt);import{Command as Zt}from"commander";async function te(r){let t=await b(r),e=g.create(t);await e.syncTemplates(),await f.create(t,e).run("sync")}var ht=new Zt().name("sync").description("syncs the workspace templates with the package & configured repository").addArgument(D).action(te);var Ct=()=>process.exit(0);process.on("SIGINT",Ct);process.on("SIGTERM",Ct);process.on("uncaughtException",r=>{p.error(r.message),process.exit(1)});new ee().name(U.name).description(U.description).version(U.version).addCommand(yt).addCommand(dt).addCommand(ht).parseAsync().catch(r=>{p.error(r.message),process.exit(1)}).finally(()=>p.success("Finished execution."));
